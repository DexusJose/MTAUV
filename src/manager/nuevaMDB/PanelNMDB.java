/*
 * The MIT License
 *
 * Copyright 2019 Ing. Dexus José Pérez <jose_perezmiranda@outlook.com>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package manager.nuevaMDB;

import Conection.conectiondb;
import java.awt.Window;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ing. Dexus José Pérez <jose_perezmiranda@outlook.com>
 */
public class PanelNMDB extends javax.swing.JPanel {

    //public String exten;
    private FileNameExtensionFilter FiltroArchivo;
    public static Connection conexion;
    public static Statement comando;
    public static ResultSet resultado;
    
    conectiondb conector = new conectiondb();
    
    public static String ruta;
    public static String exten = ".mdb";
    public static JFileChooser guardar = new JFileChooser();
    public static String direccion = System.getProperty("user.home");
    public static File directorio = new File(direccion+"/documents");
    public static File doc;

    /**
     * Creates new form PanelMDB
     */
    public PanelNMDB() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ET_NBD = new javax.swing.JLabel();
        CT_NombreMDB = new javax.swing.JTextField();
        Bt_CrearMDB = new javax.swing.JButton();

        setBackground(MenuPrincipal.principal.Fond_blue);
        setMaximumSize(new java.awt.Dimension(400, 150));
        setPreferredSize(new java.awt.Dimension(400, 150));

        ET_NBD.setText("Nueva Base de Datos:");

        Bt_CrearMDB.setText("Crear");
        Bt_CrearMDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_CrearMDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(ET_NBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Bt_CrearMDB)
                    .addComponent(CT_NombreMDB, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ET_NBD)
                    .addComponent(CT_NombreMDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(Bt_CrearMDB)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Bt_CrearMDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_CrearMDBActionPerformed
        // TODO add your handling code here:
        if(CT_NombreMDB.getText().length()!= 0){
            doc = new File(directorio+"/"+CT_NombreMDB.getText()+exten);
            
        
            if(!doc.exists()){
                                     
                try {
                    //File NMDB = new File(directorio+"/"+CT_NombreMDB.getText()+exten);
                    JOptionPane.showMessageDialog(this,"MDB creado!\n"+directorio+"\\"+CT_NombreMDB.getText()+exten);
                    //NMDB.close();
                    
                    try {
                            //Class.forName("net.ucanacces.jdbc.UcanaccessDriver");
                            conexion = DriverManager.getConnection("jdbc:ucanaccess://"+directorio+"\\"+CT_NombreMDB.getText()+exten+";newdatabaseversion=V2010");
                            JOptionPane.showMessageDialog(this, "Conexión establecida ","Correcto" , JOptionPane.INFORMATION_MESSAGE);
                            comando = conexion.createStatement();
                            JOptionPane.showMessageDialog(this, "Sentencia ok", "ok!", JOptionPane.INFORMATION_MESSAGE);
                            comando.execute("CREATE TABLE ejemplo (id COUNTER PRIMARY KEY, descr text(400), number numeric(12,3), date datetime) ");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, "Error: \n"+e, "Error al cargar el driver", JOptionPane.ERROR_MESSAGE);
                        }
                    
                    try {
                            comando.close();
                            JOptionPane.showMessageDialog(this, "Datos cerrado!");
                        } catch (SQLException e) {
            
                            JOptionPane.showMessageDialog(this, "Error al cerrar la base de datos: \n"+e);
                            
                        }
                    
                    Window win = SwingUtilities.getWindowAncestor(this);
                    win.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "error: "+ e);
                }
            }else{
                JOptionPane.showMessageDialog(this, "El archivo ya existe!");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el archivo");
        }
        
        
    }//GEN-LAST:event_Bt_CrearMDBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt_CrearMDB;
    private javax.swing.JTextField CT_NombreMDB;
    private javax.swing.JLabel ET_NBD;
    // End of variables declaration//GEN-END:variables
}
